#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å PostgreSQL
"""

import os
import tempfile
import json
from datetime import datetime
from storage.postgres_storage import postgres_storage
from analytics import Analytics

def create_test_document(content, filename):
    """–°–æ–∑–¥–∞—ë—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª"""
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(content)
    return filename

def test_postgres_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL"""
    print("üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...")
    
    try:
        stats = postgres_storage.get_database_stats()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {stats['total_documents']}")
        print(f"   –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤: {stats['total_counterparties']}")
        print(f"   –ë–∏–∑–Ω–µ—Å-—Ü–µ–ø–æ—á–µ–∫: {stats['total_chains']}")
        print(f"   –ù–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ü–µ–ø–æ—á–µ–∫: {stats['unclosed_chains']}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_storage():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Ö—Ä–∞–Ω–µ–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    test_docs = [
        {
            'content': '–î–û–ì–û–í–û–† ‚Ññ–î-2024-002\n–û–û–û "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ—Å—Ç–∞–≤—â–∏–∫"\n–ò–ù–ù: 9876543210\n–°—É–º–º–∞: 2000000\n–ü—Ä–µ–¥–º–µ—Ç: –ü–æ—Å—Ç–∞–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
            'filename': 'test_contract_pg.txt',
            'expected_type': '–¥–æ–≥–æ–≤–æ—Ä'
        },
        {
            'content': '–°–ß–ï–¢ ‚Ññ456\n–û–û–û "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ—Å—Ç–∞–≤—â–∏–∫"\n–ò–ù–ù: 9876543210\n–°—É–º–º–∞: 1000000\n–î–æ–≥–æ–≤–æ—Ä: –î-2024-002',
            'filename': 'test_invoice_pg.txt',
            'expected_type': '—Å—á–µ—Ç'
        },
        {
            'content': '–ê–ö–¢ ‚Ññ789\n–û–û–û "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ—Å—Ç–∞–≤—â–∏–∫"\n–ò–ù–ù: 9876543210\n–°—É–º–º–∞: 1000000\n–î–æ–≥–æ–≤–æ—Ä: –î-2024-002',
            'filename': 'test_act_pg.txt',
            'expected_type': '–∞–∫—Ç'
        }
    ]
    
    for i, doc in enumerate(test_docs):
        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        test_file = create_test_document(doc['content'], doc['filename'])
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        test_data = {
            'doc_type': doc['expected_type'],
            'counterparty': '–û–û–û "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ—Å—Ç–∞–≤—â–∏–∫"',
            'inn': '9876543210',
            'doc_number': f'{"–î-2024-002" if doc["expected_type"] == "–¥–æ–≥–æ–≤–æ—Ä" else "456" if doc["expected_type"] == "—Å—á–µ—Ç" else "789"}',
            'date': '2024-12-02',
            'amount': 2000000 if doc['expected_type'] == '–¥–æ–≥–æ–≤–æ—Ä' else 1000000,
            'subject': '–ü–æ—Å—Ç–∞–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
            'contract_number': '–î-2024-002'
        }
        
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            doc_id = postgres_storage.save_document(test_file, test_data, 54321)
            print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç {doc['expected_type']} —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å ID: {doc_id}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            os.remove(test_file)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è {doc['expected_type']}: {e}")

def test_analytics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    
    try:
        # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        analytics = Analytics()
        
        # –¢–µ—Å—Ç –æ—Ç—á—ë—Ç–∞ –ø–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞–º
        report = analytics.generate_counterparty_report()
        print(f"‚úÖ –û—Ç—á—ë—Ç –ø–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞–º: {report['summary']['total_counterparties']} –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤")
        
        # –¢–µ—Å—Ç –æ—Ç—á—ë—Ç–∞ –ø–æ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º —Ü–µ–ø–æ—á–∫–∞–º
        unclosed_report = analytics.generate_unclosed_chains_report()
        print(f"‚úÖ –û—Ç—á—ë—Ç –ø–æ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º —Ü–µ–ø–æ—á–∫–∞–º: {unclosed_report['summary']['total_unclosed_chains']} —Ü–µ–ø–æ—á–µ–∫")
        
        # –¢–µ—Å—Ç –º–µ—Å—è—á–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞
        monthly_report = analytics.generate_monthly_report(2024, 12)
        print(f"‚úÖ –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á—ë—Ç –∑–∞ {monthly_report['period']}: {monthly_report['summary']['total_documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")

def test_chain_details():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ü–µ–ø–æ—á–∫–∏"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ü–µ–ø–æ—á–∫–∏...")
    
    try:
        chain_details = postgres_storage.get_chain_details('–î-2024-002')
        if chain_details:
            print(f"‚úÖ –¶–µ–ø–æ—á–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {chain_details['counterparty']}")
            print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —Ü–µ–ø–æ—á–∫–µ: {len(chain_details['documents'])}")
            print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {chain_details['total_amount']:,.2f} ‚ÇΩ")
            print(f"   –ó–∞–∫—Ä—ã—Ç–æ: {chain_details['closed_amount']:,.2f} ‚ÇΩ")
        else:
            print("‚ö†Ô∏è –¶–µ–ø–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Ü–µ–ø–æ—á–∫–∏: {e}")

def test_views():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüëÅÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –¢–µ—Å—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ü–µ–ø–æ—á–µ–∫
        unclosed_chains = postgres_storage.get_unclosed_chains()
        print(f"‚úÖ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ü–µ–ø–æ—á–µ–∫: {len(unclosed_chains)} –∑–∞–ø–∏—Å–µ–π")
        
        # –¢–µ—Å—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á—ë—Ç–æ–≤ –ø–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞–º
        counterparty_reports = postgres_storage.get_counterparty_report()
        print(f"‚úÖ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–æ–≤ –ø–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞–º: {len(counterparty_reports)} –∑–∞–ø–∏—Å–µ–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ PostgreSQL —Å–∏—Å—Ç–µ–º—ã\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not test_postgres_connection():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    test_storage()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    test_analytics()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ —Ü–µ–ø–æ—á–∫–∏
    test_chain_details()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
    test_views()
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 